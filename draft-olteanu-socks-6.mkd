---
title: SOCKS Protocol Version 6
abbrev: SOCKS 6
docname: draft-olteanu-socks-6-00
date: 2017-06-14
category: exp


ipr: trust200902
area: Internet
workgroup: Internet Area Working Group
keyword: Internet-Draft

stand_alone: yes
pi: [toc, sortrefs, symrefs]

author:
 -
  ins: V. Olteanu
  name: Vladimir Olteanu
  organization: University Politehnica of Bucharest
  email: vladimir.olteanu@cs.pub.ro
 -
  ins: D. Niculescu
  name: Dragos Niculescu
  organization: University Politehnica of Bucharest
  email: dragos.niculescu@cs.pub.ro


normative:
  RFC2119:

informative:
  RFC1928:
  RFC7413:

--- abstract

The SOCKS protocol is used primarily to proxy TCP connections to arbitrary destinations via the use of a proxy server.
Under the latest version of the protocol (version 5), it takes 2 RTTs (or 3, if authentication is used) before data can flow between the client and the server.

This memo proposes SOCKS version 6, which reduces the number of RTTs used, takes full advantage of TCP Fast Open, and adds support for 0-RTT authentication.

--- middle

Introduction {#intro}
============

SOCKS version 6 is TODO si de ce e asa de marfa
TODO: motivatie: RTT mare in retele mobile
TODO: de ce socks 5 mananca atatea RTT-uri
TODO: 0-RTT auth
TODO: TFO; mentionat end-to-end tfo

The key improvements over SOCKS version 5 are:

 * The client sends as much information upfromt as possible, and does not wait for the authentication process to conclude before requesting the creation of a socket.
 * The connection request also mimics the semantics of TCP Fast Open {{RFC7413}}. As part of the connection request, the client can supply the payload for the initial SYN that is sent out to the server.
 * The protocol supports 0-RTT authentication schemes.
 * The protocol can be extended without breaking backward-compatibility.


Requirements language
---------------------

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in {{RFC2119}}.


Connection Requests {#req}
===================

The client starts by sending a request to the proxy.

[//]: 789012345678901234567890123456789012345678901234567890123456789012
~~~~

+-------------+-----------+----------+-----------+----------------+
|   Version   | Number of | Methods  | Number of | Authentication |
|             |  methods  |          |   auth.   |     blobs      |
| Maj. | Min. |           |          |   blobs   |                |
+------+------+-----------+----------+-----------+----------------|
|  1   |  1   |     1     | Variable |     1     |    Variable    |
+------+------+-----------+----------+-----------+----------------+
+---------+-----+---------+----------+-------------+
| Command | TFO | Address | Address  | Destination |
|  code   |     |  type   |          |    port     |
+---------+-----+---------+----------+-------------+
|    1    |  1  |    1    | Variable |      2      |
+---------+-----+---------+----------+-------------+
+-----------+----------+--------------+--------------+
| Number of | Options  | Initial data | Initial data |
|  options  |          |     size     |              |
+-----------+----------+--------------+--------------+
|     1     | Variable |      2       |   Variable   |
+-----------+----------+--------------+--------------+
 
~~~~
{: #fig-req title="SOCKS 6 Request"}

The fields have the following descriptions:

 * Version: The major byte MUST be set to 0x05, and the minor byte MUST be set to 0x00.
 * Number of methods: The number of supported authentication methods that the client wishes to advertise.
 * Methods: One byte per advertised method. TODO: values
 * Number of authentication blobs: TODO
 * Authentication blobs: 
 * Command code:


Authentication protocol data blobs
----------------------------------



Initial Replies {#irep}
===============

Upon receipt of a request, the proxy sends an 
TODO: schimbat numele



Final Replies {#frep}
=============

TODO: schimbat numele


Mode of operation {#op}
=================

TODO: schema (la layer 7) cu req, irep, protocol de autentificate (abstractizat), frep

~~~~

:-)

~~~~
{: #fig-smile title="A smiley face"}


Security Considerations
=======================

Given the format of the request message, a malicious client could craft a request that is in excess of 100 KB. A proxy could be prone to DDoS attacks either via:

 * Slowloris attacks, or (TODO: citat)
 * memory starvation.
 
To mitigate such attacks, proxy implementations SHOULD be able to incrementally parse the requests. Proxies MAY close the connection to the client if:

 * the request is not fully received after a certain timeout, or
 * the number of authentication protocol blobs or options exceeds an imposed hard cap, or
 * the size of the initial data excedes a hard cap.

Further, the server MAY choose not to buffer any initial data beyond what would fit in a TFO SYN's payload.


Acknowledgements
================

The protocol described in this draft builds upon and is a direct continuation of SOCKS 5 {{RFC1928}}.

--- back
